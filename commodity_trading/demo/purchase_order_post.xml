<?xml version='1.0' encoding='UTF-8'?>
<odoo>
    <function model="purchase.order" name="button_confirm">
        <value eval="[
            ref('purchase_order_1'),
            ref('purchase_order_2'),
            ref('purchase_order_3'),
            ref('purchase_order_4'),
            ref('purchase_order_5'),
            ref('purchase_order_6'),
            ref('purchase_order_7'),
            ref('purchase_order_8'),
            ]"
        />
    </function>

    <function name="_add_to_wave" model="stock.move.line" context="{'active_owner_id': ref('base.user_admin')}">
        <value model="stock.move.line" eval="obj().search([('picking_id', 'in', obj().env.ref('commodity_trading.purchase_order_1').picking_ids.ids), ('state', '!=', 'done')]).ids"/>
    </function>
    <function name="_add_to_wave" model="stock.move.line" context="{'active_owner_id': ref('base.user_admin')}">
        <value model="stock.move.line" eval="obj().search([('picking_id', 'in', obj().env.ref('commodity_trading.purchase_order_2').picking_ids.ids), ('state', '!=', 'done')]).ids"/>
    </function>
    <function name="_add_to_wave" model="stock.move.line" context="{'active_owner_id': ref('base.user_admin')}">
        <value model="stock.move.line" eval="obj().search([('picking_id', 'in', obj().env.ref('commodity_trading.purchase_order_3').picking_ids.ids), ('state', '!=', 'done')]).ids"/>
    </function>
    <function name="_add_to_wave" model="stock.move.line" context="{'active_owner_id': ref('base.user_admin')}">
        <value model="stock.move.line" eval="obj().search([('picking_id', 'in', obj().env.ref('commodity_trading.purchase_order_4').picking_ids.ids), ('state', '!=', 'done')]).ids"/>
    </function>
    <function name="_add_to_wave" model="stock.move.line" context="{'active_owner_id': ref('base.user_admin')}">
        <value model="stock.move.line" eval="obj().search([('picking_id', 'in', obj().env.ref('commodity_trading.purchase_order_5').picking_ids.ids), ('state', '!=', 'done')]).ids"/>
    </function>
    <function name="_add_to_wave" model="stock.move.line" context="{'active_owner_id': ref('base.user_admin')}">
        <value model="stock.move.line" eval="obj().search([('picking_id', 'in', obj().env.ref('commodity_trading.purchase_order_6').picking_ids.ids), ('state', '!=', 'done')]).ids"/>
    </function>
    <function name="_add_to_wave" model="stock.move.line" context="{'active_owner_id': ref('base.user_admin')}">
        <value model="stock.move.line" eval="obj().search([('picking_id', 'in', obj().env.ref('commodity_trading.purchase_order_7').picking_ids.ids), ('state', '!=', 'done')]).ids"/>
    </function>
    <function name="_add_to_wave" model="stock.move.line" context="{'active_owner_id': ref('base.user_admin')}">
        <value model="stock.move.line" eval="obj().search([('picking_id', 'in', obj().env.ref('commodity_trading.purchase_order_8').picking_ids.ids), ('state', '!=', 'done')]).ids"/>
    </function>

    <function name="write" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_2').picking_ids.batch_id.id"/>
        <value eval="{
            'x_truck_no': 'GJ01FD9853',
            'x_driver_name': 'Kishan',
            'x_gross_weight': 3900.00,
            'x_weight': 1200.00,
            'x_weighing_receipt_number': 'ASD2348745',
            'x_weighing_scale': ref('weigh_bridge_1'),
        }"/>
    </function>
    <function name="write" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_5').picking_ids.batch_id.id"/>
        <value eval="{
            'x_truck_no': 'GJ01FD0753',
            'x_driver_name': 'Pratik',
            'x_gross_weight': 50,
            'x_weight': 23,
            'x_weighing_receipt_number': 'ASD2348451',
            'x_weighing_scale': ref('weigh_bridge_1'),
        }"/>
    </function>
    <function name="write" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_6').picking_ids.batch_id.id"/>
        <value eval="{
            'x_truck_no': 'GJ01FD2343',
            'x_driver_name': 'Parth',
            'x_gross_weight': 50,
            'x_weight': 23,
            'x_weighing_receipt_number': 'ASD2341234',
            'x_weighing_scale': ref('weigh_bridge_2'),
        }"/>
    </function>
    <function name="write" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_7').picking_ids.batch_id.id"/>
        <value eval="{
            'x_truck_no': 'GJ27DB4122',
            'x_driver_name': 'Narendra Modi',
            'x_gross_weight': 70,
            'x_weight': 16,
            'x_weighing_receipt_number': 'ASD2342323',
            'x_weighing_scale': ref('weigh_bridge_2'),
        }"/>
    </function>
    <function name="write" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_8').picking_ids.batch_id.id"/>
        <value eval="{
            'x_truck_no': 'GJ27DB8541',
            'x_driver_name': 'Arjun',
            'x_gross_weight': 70,
            'x_weight': 16,
            'x_weighing_receipt_number': 'ASD2342324',
            'x_weighing_scale': ref('weigh_bridge_1'),
        }"/>
    </function>

    <function name="action_open_quality_check_wizard" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_8').picking_ids.batch_id.id"/>
    </function>

    <record id="worksheet_template_studio_4" model="x_quality_check_worksheet_template_2">
        <field name="x_quality_check_id" model="x_quality_check_worksheet_template_2" eval="obj().env.ref('commodity_trading.purchase_order_2').picking_ids.check_ids.id"/>
        <field name="x_moisture">8.40</field>
        <field name="x_split_broken">0.30</field>
        <field name="x_admixture">0.40</field>
        <field name="x_damage">0.30</field>
    </record>
    <record id="worksheet_template_studio_3" model="x_quality_check_worksheet_template_2">
        <field name="x_quality_check_id" model="x_quality_check_worksheet_template_2" eval="obj().env.ref('commodity_trading.purchase_order_5').picking_ids.check_ids.id"/>
        <field name="x_moisture">0.50</field>
        <field name="x_split_broken">0.60</field>
        <field name="x_admixture">0.80</field>
        <field name="x_damage">0.70</field>
    </record>
    <record id="worksheet_template_studio_2" model="x_quality_check_worksheet_template_2">
        <field name="x_quality_check_id" model="x_quality_check_worksheet_template_2" eval="obj().env.ref('commodity_trading.purchase_order_6').picking_ids.check_ids.id"/>
        <field name="x_moisture">0.50</field>
        <field name="x_split_broken">0.60</field>
        <field name="x_admixture">0.70</field>
        <field name="x_damage">0.90</field>
    </record>
    <record id="worksheet_template_studio_1" model="x_quality_check_worksheet_template_2">
        <field name="x_quality_check_id" model="x_quality_check_worksheet_template_2" eval="obj().env.ref('commodity_trading.purchase_order_7').picking_ids.check_ids.id"/>
        <field name="x_moisture">0.50</field>
        <field name="x_split_broken">0.60</field>
        <field name="x_admixture">0.80</field>
        <field name="x_damage">0.90</field>
    </record>
    <record id="worksheet_template_studio_5" model="x_quality_check_worksheet_template_2">
        <field name="x_quality_check_id" model="x_quality_check_worksheet_template_2" eval="obj().env.ref('commodity_trading.purchase_order_8').picking_ids.check_ids.id"/>
        <field name="x_moisture">0.50</field>
        <field name="x_split_broken">0.60</field>
        <field name="x_admixture">0.80</field>
        <field name="x_damage">0.90</field>
    </record>

    <function name="do_fail" model="quality.check">
        <value model="quality.check" eval="obj().search([('picking_id', 'in',(obj().env.ref('commodity_trading.purchase_order_8')).picking_ids.ids)]).ids"/>
    </function>
    <function name="do_fail" model="quality.check">
        <value model="quality.check" eval="obj().search([('picking_id', 'in',(obj().env.ref('commodity_trading.purchase_order_7')).picking_ids.ids)]).ids"/>
    </function>
    <function name="do_fail" model="quality.check">
        <value model="quality.check" eval="obj().search([('picking_id', 'in',(obj().env.ref('commodity_trading.purchase_order_6')).picking_ids.ids)]).ids"/>
    </function>
    <function name="do_fail" model="quality.check">
        <value model="quality.check" eval="obj().search([('picking_id', 'in',(obj().env.ref('commodity_trading.purchase_order_5')).picking_ids.ids)]).ids"/>
    </function>
    <function name="do_fail" model="quality.check">
        <value model="quality.check" eval="obj().search([('picking_id', 'in',(obj().env.ref('commodity_trading.purchase_order_2')).picking_ids.ids)]).ids"/>
    </function>

    <function name="write" model="stock.move.line">
        <value model="stock.move.line" eval="obj().search([('picking_id', '=', obj().env.ref('commodity_trading.purchase_order_2').picking_ids.id)]).id"/>
        <value model="stock.lot" eval="{'lot_id': ref('stock_lot_1'), 'lot_name': obj().env.ref('commodity_trading.stock_lot_1').name}"/>
    </function>

    <function name="action_done" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_8').picking_ids.batch_id.id"/>
    </function>
    <function name="action_done" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_7').picking_ids.batch_id.id"/>
    </function>
    <function name="action_done" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_6').picking_ids.batch_id.id"/>
    </function>
    <function name="action_done" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_5').picking_ids.batch_id.id"/>
    </function>
    <function name="action_done" model="stock.picking.batch">
        <value model="stock.picking.batch" eval="obj().env.ref('commodity_trading.purchase_order_2').picking_ids.batch_id.id"/>
    </function>
</odoo>
